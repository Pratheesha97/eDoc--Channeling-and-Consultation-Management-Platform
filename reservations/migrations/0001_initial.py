# Generated by Django 3.1.6 on 2021-05-15 08:31

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import reservations.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_patient', models.BooleanField(default=False)),
                ('is_doctor', models.BooleanField(default=False)),
                ('is_hospStaff', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', reservations.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('ReferenceID', models.CharField(max_length=6, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(6)])),
                ('date', models.CharField(max_length=500)),
                ('time', models.CharField(max_length=25)),
                ('AppointmentNo', models.IntegerField()),
                ('ChannellingFee', models.DecimalField(decimal_places=2, max_digits=6)),
                ('status', models.CharField(max_length=25)),
                ('patientContactNum', models.CharField(blank=True, default='', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_doctor', serialize=False, to='reservations.user')),
                ('doctorImage', models.ImageField(blank=True, max_length=300, null=True, upload_to='doctor_profile_images')),
                ('doctorFName', models.CharField(max_length=100)),
                ('doctorLName', models.CharField(max_length=100)),
                ('doctorGender', models.CharField(default='-', max_length=10)),
                ('doctorNationality', models.CharField(max_length=50)),
                ('doctorIdentification', models.CharField(max_length=20, null=True, unique=True)),
                ('Specialization', models.CharField(max_length=50)),
                ('Qualifications', models.CharField(max_length=500, null=True)),
                ('chargePerSession', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('doctorPhone', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_patient', serialize=False, to='reservations.user')),
                ('patientImage', models.ImageField(blank=True, max_length=300, null=True, upload_to='patient_profile_images')),
                ('title', models.CharField(blank=True, max_length=10)),
                ('fname', models.CharField(max_length=100)),
                ('lname', models.CharField(max_length=100)),
                ('gender', models.CharField(blank=True, default='', max_length=10)),
                ('Identification', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('dob', models.CharField(blank=True, max_length=300, null=True)),
                ('Nationality', models.CharField(blank=True, default='', max_length=50)),
                ('Address', models.CharField(blank=True, default='', max_length=500)),
                ('email', models.EmailField(default='', max_length=100, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_staff', serialize=False, to='reservations.user')),
                ('sImage', models.ImageField(blank=True, max_length=300, null=True, upload_to='staff_profile_images')),
                ('sTitle', models.CharField(max_length=10)),
                ('sFname', models.CharField(max_length=100)),
                ('sLname', models.CharField(max_length=100)),
                ('sDesignation', models.CharField(max_length=100)),
                ('sAddress', models.CharField(blank=True, default='', max_length=500)),
                ('sPhone', models.CharField(blank=True, default='', max_length=15, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='WorkSchedule',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('day', models.CharField(max_length=25)),
                ('timeSlot', models.CharField(max_length=25)),
                ('time', models.CharField(max_length=25)),
                ('appointmentLimit', models.CharField(max_length=3)),
                ('doctorID', models.ForeignKey(db_column='doctorID', on_delete=django.db.models.deletion.CASCADE, related_name='work_doctorID', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('PrescriptionID', models.CharField(max_length=8, validators=[django.core.validators.MinLengthValidator(8)])),
                ('DrugName', models.CharField(blank=True, max_length=80)),
                ('DurationCount', models.CharField(max_length=5)),
                ('DurationType', models.CharField(max_length=10)),
                ('DosageMorn', models.CharField(max_length=5)),
                ('DosageAft', models.CharField(max_length=5)),
                ('DosageEve', models.CharField(max_length=5)),
                ('DosageNight', models.CharField(max_length=5)),
                ('Instructions', models.CharField(blank=True, max_length=25)),
                ('Notes', models.CharField(blank=True, max_length=500)),
                ('ReferenceID', models.ForeignKey(db_column='ReferenceID', default='', on_delete=django.db.models.deletion.CASCADE, related_name='prescription_ReferenceID', to='reservations.appointment')),
            ],
        ),
        migrations.CreateModel(
            name='TreatmentPlan',
            fields=[
                ('ReferenceID', models.OneToOneField(db_column='ReferenceID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='reservations.appointment')),
                ('presentingComplaint', models.TextField(blank=True, default='None', max_length=5000, null=True)),
                ('investigationResults', models.TextField(blank=True, default='None', max_length=5000, null=True)),
                ('testsToBeDone', models.TextField(blank=True, default='None', max_length=5000, null=True)),
                ('medicalAdvices', models.TextField(blank=True, default='None', max_length=5000, null=True)),
                ('treatDate', models.CharField(blank=True, max_length=500)),
                ('patientID', models.ForeignKey(db_column='patientID', default='', on_delete=django.db.models.deletion.CASCADE, related_name='treatmentPlan_patientID', to='reservations.patient')),
            ],
        ),
        migrations.AddField(
            model_name='appointment',
            name='doctorID',
            field=models.ForeignKey(db_column='doctorID', on_delete=django.db.models.deletion.CASCADE, related_name='appointment_doctorID', to='reservations.doctor'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patientID',
            field=models.ForeignKey(db_column='patientID', on_delete=django.db.models.deletion.CASCADE, related_name='appointment_patientID', to='reservations.patient'),
        ),
    ]
